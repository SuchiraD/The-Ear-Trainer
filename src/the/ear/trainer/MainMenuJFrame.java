/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package the.ear.trainer;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Logger;
import javax.sound.midi.Instrument;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import org.jfugue.player.Player;
import org.jfugue.theory.Intervals;
import org.jfugue.theory.*;


/**
 *
 * @author Suchira
 */
public class MainMenuJFrame extends javax.swing.JFrame {

    private User user;
    private static MainMenuJFrame singleton;
    
    
    Map<String, String> answerMap = new HashMap<>();
    Map<String, String> answerMapChords = new HashMap<>();
    Map<String, String> exMap = new HashMap<>();
    
    List<String> chordsList = new ArrayList<>();
    List<String> notesList = new ArrayList<>();
    List<String> scalesList = new ArrayList<>();
    List<String> intervelsList = new ArrayList<>();
    
    private final int MAX_EX_SCALES = 18;
    private final int MAX_EX_CHORDS = 34;
    private final String[] scalePatterns = new String[MAX_EX_SCALES];
    private final String[] chordPatterns = new String[MAX_EX_CHORDS];
    private final String[] scales = new String[MAX_EX_SCALES];
    private final String[] chords = new String[MAX_EX_CHORDS];
    private final String[] notePatterns = {"C", "C#", "Db", "D", "D#", "Eb", "E", "F", "F#", "Gb", "G", "G#", "Ab", "A", "A#", "Bb", "B"};
    
    private Player player = new Player();
    int instrument = 0;
    
    private enum Instrument{
        PIANO(0), GUITAR(24), SITAR(104), CHURCH_ORGAN(19), VIOLIN(40);
        private int value;
        private Instrument(int value){
            this.value = value;
        }
        public int getValue(){
            return value;
        }
    }
    /**
     * Creates new form MainMenuJFrame
     */
    
    public static MainMenuJFrame getMainMenuJFrame(User user){
        if(singleton == null){
            singleton = new MainMenuJFrame(user);
        }
        return singleton;
    }
    
    private MainMenuJFrame(User user) {
        initComponents();
        cSharpButton.setBackground(Color.BLACK);
        this.repaint();
        this.user = user;
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        
        updateUserDetails();
        
        instrumentPanel.setBounds(dynamicChangingPanel.getX(), dynamicChangingPanel.getY()+dynamicChangingPanel.getHeight()+10, dynamicChangingPanel.getWidth(), dynamicChangingPanel.getHeight());
        creator();
    }
    
    public void updateUserDetails(){
        nameLabel.setText(user.getName());
        lastseenLabel.setText(user.getLastVisited());
//        System.out.println("Name: " + user.getName());
        updateBestscores();
    }
    
    public void updateBestscores(){
        UserHandler handler = new UserHandler();
        handler.updateUser();
        notesLabel1.setText(Double.toString(user.getNotesBestscore()));
        chordsLabel1.setText(Double.toString(user.getChordsBestscore()));
        intervalLabel1.setText(Double.toString(user.getIntervalsBestscore()));
        scalesLabel1.setText(Double.toString(user.getScalesBestscore()));
    }
    
    public void repaintPanel(JPanel panel1, JPanel panel2){
        panel1.setLayout(new BorderLayout());
        panel1.removeAll();
        panel1.add(panel2);
        panel1.repaint();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        userDetailsPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lastseenLabel = new javax.swing.JLabel();
        bestscoresPanel = new javax.swing.JPanel();
        intervalLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        notesLabel1 = new javax.swing.JLabel();
        chordsLabel1 = new javax.swing.JLabel();
        scalesLabel1 = new javax.swing.JLabel();
        dynamicChangingPanel = new javax.swing.JPanel();
        instrumentPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        keyoardPanel = new javax.swing.JPanel();
        fButton = new javax.swing.JButton();
        bButton = new javax.swing.JButton();
        fSharpButton = new javax.swing.JButton();
        gSharpButton = new javax.swing.JButton();
        aSharpButton = new javax.swing.JButton();
        eButton = new javax.swing.JButton();
        cButton2 = new javax.swing.JButton();
        cSharpButton = new javax.swing.JButton();
        aButton = new javax.swing.JButton();
        dSharpButton = new javax.swing.JButton();
        dButton = new javax.swing.JButton();
        gButton = new javax.swing.JButton();
        cButton = new javax.swing.JButton();
        instrumentNumberTextField = new javax.swing.JTextField();
        menuBarPanel = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        totalScoresPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        notesLabel = new javax.swing.JLabel();
        chordsLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        scalesLabel = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        intervalLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        exTriedLabel = new javax.swing.JLabel();
        exCorrectLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        currentStatisticsPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        exTriedLabel2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        exCorectLabel2 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        currentScoreLabel = new javax.swing.JLabel();
        practiceButton = new javax.swing.JButton();
        performanceButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userDetailsPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        nameLabel.setText("jLabel7");

        jLabel1.setText("Username:");

        jLabel3.setText("Last Visited:");

        lastseenLabel.setText("jLabel7");

        bestscoresPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Best Scores"));
        bestscoresPanel.setLayout(new java.awt.GridBagLayout());

        intervalLabel1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 18, 6);
        bestscoresPanel.add(intervalLabel1, gridBagConstraints);

        jLabel17.setText("Intervals");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 119;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 18, 0);
        bestscoresPanel.add(jLabel17, gridBagConstraints);

        jLabel19.setText("Scales");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 132;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        bestscoresPanel.add(jLabel19, gridBagConstraints);

        jLabel14.setText("Chords");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 128;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        bestscoresPanel.add(jLabel14, gridBagConstraints);

        jLabel11.setText("Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 6, 0, 0);
        bestscoresPanel.add(jLabel11, gridBagConstraints);

        notesLabel1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 93, 0, 6);
        bestscoresPanel.add(notesLabel1, gridBagConstraints);

        chordsLabel1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 0, 6);
        bestscoresPanel.add(chordsLabel1, gridBagConstraints);

        scalesLabel1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 0, 6);
        bestscoresPanel.add(scalesLabel1, gridBagConstraints);

        javax.swing.GroupLayout userDetailsPanelLayout = new javax.swing.GroupLayout(userDetailsPanel);
        userDetailsPanel.setLayout(userDetailsPanelLayout);
        userDetailsPanelLayout.setHorizontalGroup(
            userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bestscoresPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userDetailsPanelLayout.createSequentialGroup()
                        .addGroup(userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastseenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        userDetailsPanelLayout.setVerticalGroup(
            userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userDetailsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameLabel))
                .addGap(18, 18, 18)
                .addGroup(userDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lastseenLabel))
                .addGap(29, 29, 29)
                .addComponent(bestscoresPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        dynamicChangingPanel.setBackground(new java.awt.Color(255, 255, 255));
        dynamicChangingPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        dynamicChangingPanel.setPreferredSize(new java.awt.Dimension(373, 373));

        javax.swing.GroupLayout dynamicChangingPanelLayout = new javax.swing.GroupLayout(dynamicChangingPanel);
        dynamicChangingPanel.setLayout(dynamicChangingPanelLayout);
        dynamicChangingPanelLayout.setHorizontalGroup(
            dynamicChangingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        dynamicChangingPanelLayout.setVerticalGroup(
            dynamicChangingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );

        instrumentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Instrument"));

        jLabel5.setText("Instrument");

        fButton.setBackground(new java.awt.Color(255, 255, 255));
        fButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fButtonActionPerformed(evt);
            }
        });

        bButton.setBackground(new java.awt.Color(255, 255, 255));
        bButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButtonActionPerformed(evt);
            }
        });

        fSharpButton.setBackground(new java.awt.Color(0, 0, 0));
        fSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fSharpButtonActionPerformed(evt);
            }
        });

        gSharpButton.setBackground(new java.awt.Color(0, 0, 0));
        gSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gSharpButtonActionPerformed(evt);
            }
        });

        aSharpButton.setBackground(new java.awt.Color(0, 0, 0));
        aSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aSharpButtonActionPerformed(evt);
            }
        });

        eButton.setBackground(new java.awt.Color(255, 255, 255));
        eButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eButtonActionPerformed(evt);
            }
        });

        cButton2.setBackground(new java.awt.Color(255, 255, 255));
        cButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButton2ActionPerformed(evt);
            }
        });

        cSharpButton.setBackground(new java.awt.Color(0, 0, 0));
        cSharpButton.setOpaque(false);
        cSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSharpButtonActionPerformed(evt);
            }
        });

        aButton.setBackground(new java.awt.Color(255, 255, 255));
        aButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aButtonActionPerformed(evt);
            }
        });

        dSharpButton.setBackground(new java.awt.Color(0, 0, 0));
        dSharpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dSharpButtonActionPerformed(evt);
            }
        });

        dButton.setBackground(new java.awt.Color(255, 255, 255));
        dButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dButtonActionPerformed(evt);
            }
        });

        gButton.setBackground(new java.awt.Color(255, 255, 255));
        gButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gButtonActionPerformed(evt);
            }
        });

        cButton.setBackground(new java.awt.Color(255, 255, 255));
        cButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout keyoardPanelLayout = new javax.swing.GroupLayout(keyoardPanel);
        keyoardPanel.setLayout(keyoardPanelLayout);
        keyoardPanelLayout.setHorizontalGroup(
            keyoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keyoardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(keyoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(keyoardPanelLayout.createSequentialGroup()
                        .addComponent(cSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(fSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(keyoardPanelLayout.createSequentialGroup()
                        .addComponent(cButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        keyoardPanelLayout.setVerticalGroup(
            keyoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keyoardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(keyoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aSharpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(keyoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        instrumentNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instrumentNumberTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout instrumentPanelLayout = new javax.swing.GroupLayout(instrumentPanel);
        instrumentPanel.setLayout(instrumentPanelLayout);
        instrumentPanelLayout.setHorizontalGroup(
            instrumentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instrumentPanelLayout.createSequentialGroup()
                .addGroup(instrumentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(instrumentPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(keyoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(instrumentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(instrumentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        instrumentPanelLayout.setVerticalGroup(
            instrumentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instrumentPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(instrumentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(instrumentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(keyoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        logoutButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuBarPanelLayout = new javax.swing.GroupLayout(menuBarPanel);
        menuBarPanel.setLayout(menuBarPanelLayout);
        menuBarPanelLayout.setHorizontalGroup(
            menuBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuBarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoutButton))
        );
        menuBarPanelLayout.setVerticalGroup(
            menuBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButton)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Statistics"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        totalScoresPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("YOUR SCORES"));
        totalScoresPanel.setLayout(new java.awt.GridBagLayout());

        jLabel10.setText("Notes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 6, 0, 0);
        totalScoresPanel.add(jLabel10, gridBagConstraints);

        notesLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 93, 0, 6);
        totalScoresPanel.add(notesLabel, gridBagConstraints);

        chordsLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 0, 6);
        totalScoresPanel.add(chordsLabel, gridBagConstraints);

        jLabel13.setText("Chords");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 128;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        totalScoresPanel.add(jLabel13, gridBagConstraints);

        scalesLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 0, 6);
        totalScoresPanel.add(scalesLabel, gridBagConstraints);

        jLabel15.setText("Scales");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 132;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        totalScoresPanel.add(jLabel15, gridBagConstraints);

        jLabel16.setText("Intervals");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 119;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 18, 0);
        totalScoresPanel.add(jLabel16, gridBagConstraints);

        intervalLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 93, 18, 6);
        totalScoresPanel.add(intervalLabel, gridBagConstraints);

        jPanel1.add(totalScoresPanel, java.awt.BorderLayout.CENTER);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        exTriedLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 185, 0, 10);
        jPanel4.add(exTriedLabel, gridBagConstraints);

        exCorrectLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 185, 11, 10);
        jPanel4.add(exCorrectLabel, gridBagConstraints);

        jLabel6.setText("Number of exercises you tried");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel4.add(jLabel6, gridBagConstraints);

        jLabel8.setText("You've got 100% correct in ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 11, 0);
        jPanel4.add(jLabel8, gridBagConstraints);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        currentStatisticsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Statistics"));
        currentStatisticsPanel.setLayout(new java.awt.GridLayout(3, 4));

        jLabel18.setText("Number of exercises you tried");
        currentStatisticsPanel.add(jLabel18);

        exTriedLabel2.setText("0");
        currentStatisticsPanel.add(exTriedLabel2);

        jLabel20.setText("You've got 100% correct in ");
        currentStatisticsPanel.add(jLabel20);

        exCorectLabel2.setText("0");
        currentStatisticsPanel.add(exCorectLabel2);

        jLabel30.setText("Your Score");
        currentStatisticsPanel.add(jLabel30);

        currentScoreLabel.setText("0");
        currentStatisticsPanel.add(currentScoreLabel);

        practiceButton.setText("Practice");
        practiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                practiceButtonActionPerformed(evt);
            }
        });

        performanceButton.setText("Performance");
        performanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performanceButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem2.setText("Backup");
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Exit");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("Grant Permission");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Reset");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuBarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(practiceButton)
                                .addGap(55, 55, 55)
                                .addComponent(performanceButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dynamicChangingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(currentStatisticsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(instrumentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(menuBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dynamicChangingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(practiceButton)
                            .addComponent(performanceButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentStatisticsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instrumentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void practiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_practiceButtonActionPerformed
        PracticeButtonPanel practiceButtonPanel = new PracticeButtonPanel(this);
//        practiceButtonPanel.setLayout(new GridLayout(0, 10));
        dynamicChangingPanel.setLayout(new BorderLayout());
        dynamicChangingPanel.removeAll();
        dynamicChangingPanel.add(practiceButtonPanel, BorderLayout.CENTER);
        dynamicChangingPanel.repaint();
        
        initializeCurrentStat();
        this.setVisible(true);
    }//GEN-LAST:event_practiceButtonActionPerformed

    private void performanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performanceButtonActionPerformed
        // TODO add your handling code here:
//        ReportHandler handler = new ReportHandler();
//        handler.getDailyPerformance();
//        System.out.println(new Date());
        
        
        PerformanceJFrame performanceJFrame = new PerformanceJFrame();
        performanceJFrame.setVisible(true);
//        repaintPanel(dynamicChangingPanel, chartPanel1);
//        repaintPanel(this.chartPanel2, chartPanel2);
    }//GEN-LAST:event_performanceButtonActionPerformed

    private void cButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButtonActionPerformed
        checkInstrument();
        player.play("i"+ instrument + " C");
    }//GEN-LAST:event_cButtonActionPerformed

    private void gButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " G");
    }//GEN-LAST:event_gButtonActionPerformed

    private void dButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dButtonActionPerformed
        checkInstrument();
        player.play("i"+ instrument + " D");
        // TODO add your handling code here:
    }//GEN-LAST:event_dButtonActionPerformed

    private void cSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSharpButtonActionPerformed
        checkInstrument();
        player.play("i"+ instrument + " C#");
        // TODO add your handling code here:
    }//GEN-LAST:event_cSharpButtonActionPerformed

    private void dSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dSharpButtonActionPerformed
        checkInstrument();
        player.play("i"+ instrument + " D#");
        // TODO add your handling code here:
    }//GEN-LAST:event_dSharpButtonActionPerformed

    private void fSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fSharpButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " F#");
    }//GEN-LAST:event_fSharpButtonActionPerformed

    private void gSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gSharpButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " G#");
    }//GEN-LAST:event_gSharpButtonActionPerformed

    private void aSharpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aSharpButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " A#");
    }//GEN-LAST:event_aSharpButtonActionPerformed

    private void eButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " E");
    }//GEN-LAST:event_eButtonActionPerformed

    private void fButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " F");
    }//GEN-LAST:event_fButtonActionPerformed

    private void aButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " A");
    }//GEN-LAST:event_aButtonActionPerformed

    private void bButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtonActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " B");
    }//GEN-LAST:event_bButtonActionPerformed

    private void cButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButton2ActionPerformed
        // TODO add your handling code here:
        checkInstrument();
        player.play("i"+ instrument + " C6");
    }//GEN-LAST:event_cButton2ActionPerformed

    private void instrumentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instrumentNumberTextFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_instrumentNumberTextFieldActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        LoginJFrame login = new LoginJFrame();
        login.setVisible(true);
        close();
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void close() {
        WindowEvent winclose = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclose);
    }
    
    public int checkInstrument(){
        String string = instrumentNumberTextField.getText();
        System.out.println("STRING: " + string);
        
        if(instrumentNumberTextField.getText() != null || instrumentNumberTextField.getText() != ""){
//            String string = jTextField1.getSelectedText();
//            System.out.println("STRING: " + string);
            try {
                instrument = Integer.parseInt(string);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return instrument;
    }
    
    public void increaseNoExDone(){
        int value = Integer.parseInt(exTriedLabel.getText());
        value++;
        exTriedLabel.setText(Integer.toString(value));
    }
    public void increaseNoExCorrect(){
        int value = Integer.parseInt(exCorrectLabel.getText());
        value++;
        exCorrectLabel.setText(Integer.toString(value));
    }
    public void setNotesScore(double d){
        notesLabel.setText(Double.toString(d));
    }
    public void setChordsScore(double d){
        chordsLabel.setText(Double.toString(d));
    }
    public void setScalesScore(double d){
        scalesLabel.setText(Double.toString(d));
    }
    public void setIntervalsScore(double d){
        intervalLabel.setText(Double.toString(d));
    }
    
    
    //Regarding current scores
    public void increaseNoExDone2(){
        int value = Integer.parseInt(exTriedLabel2.getText());
        value++;
        exTriedLabel2.setText(Integer.toString(value));
    }
    public void increaseNoExCorrect2(){
        int value = Integer.parseInt(exCorectLabel2.getText());
        value++;
        exCorectLabel2.setText(Integer.toString(value));
    }
    public void setCurrentScore(double total){
        currentScoreLabel.setText(Double.toString(total));
    }
    public void initializeCurrentStat(){
        exTriedLabel2.setText("0");
        exCorectLabel2.setText("0");
        currentScoreLabel.setText("0");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenuJFrame(User.getUser()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aButton;
    private javax.swing.JButton aSharpButton;
    private javax.swing.JButton bButton;
    private javax.swing.JPanel bestscoresPanel;
    private javax.swing.JButton cButton;
    private javax.swing.JButton cButton2;
    private javax.swing.JButton cSharpButton;
    private javax.swing.JLabel chordsLabel;
    private javax.swing.JLabel chordsLabel1;
    private javax.swing.JLabel currentScoreLabel;
    private javax.swing.JPanel currentStatisticsPanel;
    private javax.swing.JButton dButton;
    private javax.swing.JButton dSharpButton;
    private javax.swing.JPanel dynamicChangingPanel;
    private javax.swing.JButton eButton;
    private javax.swing.JLabel exCorectLabel2;
    private javax.swing.JLabel exCorrectLabel;
    private javax.swing.JLabel exTriedLabel;
    private javax.swing.JLabel exTriedLabel2;
    private javax.swing.JButton fButton;
    private javax.swing.JButton fSharpButton;
    private javax.swing.JButton gButton;
    private javax.swing.JButton gSharpButton;
    private javax.swing.JTextField instrumentNumberTextField;
    private javax.swing.JPanel instrumentPanel;
    private javax.swing.JLabel intervalLabel;
    private javax.swing.JLabel intervalLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel keyoardPanel;
    private javax.swing.JLabel lastseenLabel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JPanel menuBarPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JLabel notesLabel1;
    private javax.swing.JButton performanceButton;
    private javax.swing.JButton practiceButton;
    private javax.swing.JLabel scalesLabel;
    private javax.swing.JLabel scalesLabel1;
    private javax.swing.JPanel totalScoresPanel;
    private javax.swing.JPanel userDetailsPanel;
    // End of variables declaration//GEN-END:variables

    public void repaintDynamicPanel(ExercisePanel exercisePanel) {
        repaintPanel(dynamicChangingPanel, exercisePanel);
    }
    
    public void creator(){
        /* MAJAR SCALES */
        scalePatterns[0] = "C D E F G A B C6"; //C 
        scalePatterns[1] = "G A B C6 D6 E6 F#6 G6";//G
        scalePatterns[2] = "D E F# G A B C#6 D6";//D
        scalePatterns[3] = "A4 B4 C# D E F# G# A";//A
        scalePatterns[4] = "E F# G# A B C#6 D#6 E6";//E
        
        scalePatterns[5] = "F G A Bb C6 D6 E6 F6";//F
        scalePatterns[6] = "Bb4 C D Eb F G A Bb";//B FLAT
        scalePatterns[7] = "Eb F G Ab Bb C6 D6 Eb6";//E FLAT
        scalePatterns[8] = "Ab4 Bb4 C Db Eb F G Ab";//A FLAT

        
        scales[0] = "C MAJOR";
        scales[1] = "G MAJOR";
        scales[2] = "D MAJOR";
        scales[3] = "A MAJOR";
        scales[4] = "E MAJOR";
        scales[5] = "F MAJOR";
        scales[6] = "B FLAT MAJOR";
        scales[7] = "E FLAT MAJOR";
        scales[8] = "A FLAT MAJOR";
        /*---------------------------------------*/
        
        /* MINOR SCALES */
        scalePatterns[9] = "A4 B4 C D E F G A"; //A 
        scalePatterns[10] = "E F# G A B C6 D6 E6";//E
        scalePatterns[11] = "B4 C# D E F# G A B";//B
        scalePatterns[12] = "F#4 G#4 A4 B4 C# D E F#";//F SHARP
        scalePatterns[13] = "C# D# E F# G# A B C#6";//C SHARP
        
        scalePatterns[14] = "D E F G A Bb C6 D6";//D
        scalePatterns[15] = "G4 A4 Bb4 C D Eb F G";//G
        scalePatterns[16] = "C D Eb F G Ab Bb C6";//C
        scalePatterns[17] = "F4 G4 Ab4 Bb4 C Db Eb F";//F
        
        
        scales[9] = "A MINOR";
        scales[10] = "E MINOR";
        scales[11] = "B MINOR";
        scales[12] = "F SHARP MINOR";
        scales[13] = "C SHARP MINOR";
        scales[14] = "D MINOR";
        scales[15] = "G MINOR";
        scales[16] = "C MINOR";
        scales[17] = "F MINOR";
        /*---------------------------------------*/
        
        /*major chords*/
        chordPatterns[0] = "Cmaj"; chordPatterns[1] = "C#maj"; chordPatterns[2] = "Dbmaj";
        chordPatterns[3] = "Dmaj"; chordPatterns[4] = "D#maj"; chordPatterns[5] = "Ebmaj";
        chordPatterns[6] = "Emaj"; chordPatterns[7] = "Fmaj"; chordPatterns[8] = "F#maj";
        chordPatterns[9] = "Gbmaj"; chordPatterns[10] = "Gmaj"; chordPatterns[11] = "G#maj";
        chordPatterns[12] = "Abmaj"; chordPatterns[13] = "Amaj"; chordPatterns[14] = "A#maj";
        chordPatterns[15] = "Bbmaj"; chordPatterns[16] = "Bmaj";
        
        chords[0] = "C MAJOR"; chords[1] = "C SHARP MAJOR"; chords[2] = "D FLAT MAJOR";
        chords[3] = "D MAJOR"; chords[4] = "D SHARP MAJOR"; chords[5] = "E FLAT MAJOR";
        chords[6] = "E MAJOR"; chords[7] = "F MAJOR"; chords[8] = "F SHARP MAJOR";
        chords[9] = "G FLAT MAJOR"; chords[10] = "G MAJOR"; chords[11] = "G SHARP MAJOR";
        chords[12] = "A FLAT MAJOR"; chords[13] = "A MAJOR"; chords[14] = "A SHARP MAJOR";
        chords[15] = "B FLAT MAJOR"; chords[16] = "B MAJOR"; 
        /*------------------------------------------------------------------------------*/
        
        /*MINOR CHORDS*/
        chordPatterns[17] = "Cmin"; chordPatterns[18] = "C#min"; chordPatterns[19] = "Dbmin";
        chordPatterns[20] = "Dmin"; chordPatterns[21] = "D#min"; chordPatterns[22] = "Ebmin";
        chordPatterns[23] = "Emin"; chordPatterns[24] = "Fmin"; chordPatterns[25] = "F#min";
        chordPatterns[26] = "Gbmin"; chordPatterns[27] = "Gmin"; chordPatterns[28] = "G#min";
        chordPatterns[29] = "Abmin"; chordPatterns[30] = "Amin"; chordPatterns[31] = "A#min";
        chordPatterns[32] = "Bbmin"; chordPatterns[33] = "Bmin"; 
        
        chords[17] = "C MINOR"; chords[18] = "C SHARP MINOR"; chords[19] = "D FLAT MINOR";
        chords[20] = "D MINOR"; chords[21] = "D SHARP MINOR"; chords[22] = "E FLAT MINOR";
        chords[23] = "E MINOR"; chords[24] = "F MINOR"; chords[25] = "F SHARP MINOR";
        chords[26] = "G FLAT MINOR"; chords[27] = "G MINOR"; chords[28] = "G SHARP MINOR";
        chords[29] = "A FLAT MINOR"; chords[30] = "A MINOR"; chords[31] = "A SHARP MINOR";
        chords[32] = "B FLAT MINOR"; chords[33] = "B MINOR"; 
        /*--------------------------------------------------------------------------------*/

        /*Intervals*/
        String[] roots1 = {"F", "Eb", "A", "D", "G"};
        String[] roots2 = {"C", "E", "Bb", "Ab", "G"};
        
        for (String string : roots1) {
            perfectOctave(string);
            major3rd(string);
            minor3rd(string);
            major6th(string);
            minor6th(string);
            perfectFifth(string);
            major2nd(string);
            minor2nd(string);
        }
        
        for (String string : roots2) {
            perfectForth(string);
            major7th(string);
            minor7th(string);
        }
        /*----------------------------------------*/
        
        
        int i = 0;
        for (String scalePattern : scalePatterns) {
            scalesList.add(scales[i]);
            answerMap.put(scalePattern, scales[i]);
            exMap.put(scales[i], scalePattern);
            i++;
        }
        i = 0;
        for (String chordPattern : chordPatterns) {
            chordsList.add(chords[i]);
            answerMap.put(chordPattern, chords[i]);
//            exMap.put(scales[i], chordPattern);
            i++;
        }
        
        /*NOTES*/
        for (String string : notePatterns) {
            String name = "";
            Character temp = string.charAt(string.length()-1);
            if(temp == '#'){
                name = string.charAt(0) + " SHARP";
            }
            else if(temp == 'b'){
                name = string.charAt(0) + " FLAT";
            }
            else{
                name = string.charAt(0) + "";
            }
            notesList.add(name);
            answerMap.put(string, name);
        }
        
        for (String string : notePatterns) {
            String name = "";
            Character temp = string.charAt(string.length()-1);
            if(temp == '#'){
                name = string.charAt(0) + "4th OCT SHARP";
                string = string.charAt(0) + "4#";
            }
            else if(temp == 'b'){
                name = string.charAt(0) + "4th OCT FLAT";
                string = string.charAt(0) + "4b";
            }
            else{
                name = string.charAt(0) + "4th OCT";
                string = string.charAt(0) + "4";
            }
            notesList.add(name);
            answerMap.put(string, name);
        }
        
        for (String string : notePatterns) {
            String name = "";
            Character temp = string.charAt(string.length()-1);
            if(temp == '#'){
                name = string.charAt(0) + "6th OCT SHARP";
                string = string.charAt(0) + "6#";
            }
            else if(temp == 'b'){
                name = string.charAt(0) + "6th OCT FLAT";
                string = string.charAt(0) + "6b";
            }
            else{
                name = string.charAt(0) + "6th OCT";
                string = string.charAt(0) + "6";
            }
            notesList.add(name);
            answerMap.put(string, name);
        }
        /*---------------------------------------*/
        
    }
    
    public void perfectForth(String root){
        Intervals riff = new Intervals("<1>w <4>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "PERFECT FOURTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
        
    }
    
    public void perfectOctave(String root){
        Intervals riff = new Intervals("<1>w <8>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "PERFECT OCTAVE";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void perfectUnison(String root){
        Intervals riff = new Intervals("<1>w <1>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "PERFECT UNISON";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void perfectFifth(String root){
        Intervals riff = new Intervals("<1>w <5>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "PERFECT FIFTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void major2nd(String root){
        Intervals riff = new Intervals("<1>w <2>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MAJOR SECOND";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void major3rd(String root){
        Intervals riff = new Intervals("<1>w <3>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MAJOR THIRD";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void major7th(String root){
        Intervals riff = new Intervals("<1>w <7>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MAJOR SEVENTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void major6th(String root){
        Intervals riff = new Intervals("<1>w <6>w");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MAJOR SIXTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void minor3rd(String root){
        Intervals riff = new Intervals("<1>w <3>bw");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MINOR THIRD";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void minor6th(String root){
        Intervals riff = new Intervals("<1>w <6>bw");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MINOR SIXTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void minor7th(String root){
        Intervals riff = new Intervals("<1>w <7>bw");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MINOR SEVENTH";
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }
    public void minor2nd(String root){
        Intervals riff = new Intervals("<1>w <2>bw");
        riff.setRoot(root);
        String pattern = riff.getPattern().toString(), interName = "MINOR SECOND";        
        
        intervelsList.add(interName);
        answerMap.put(pattern, interName);
    }

    public List<String> getChordsList() {
        return chordsList;
    }

    public List<String> getNotesList() {
        return notesList;
    }

    public List<String> getScalesList() {
        return scalesList;
    }

    public List<String> getIntervelsList() {
        return intervelsList;
    }
    
    
}
